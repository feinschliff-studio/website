{"version":3,"file":"CustomElement.43dab8c6.js","sources":["../../src/components/CustomElement.ts"],"sourcesContent":["export abstract class CustomElement extends HTMLElement {\n    constructor() {\n        super();\n        this.doRender();\n    }\n\n    private async doRender(): Promise<void> {\n        const shadow = this.attachShadow({ mode: 'open' });\n        const styleTag = document.createElement('style');\n        styleTag.textContent = await this.styles();\n        shadow.appendChild(styleTag);\n\n        await this.render(shadow);\n    }\n\n    connectedCallback(): void {}\n\n    disconnectedCallback(): void {}\n\n    protected abstract render(shadow: ShadowRoot): void | Promise<void>;\n\n    protected abstract styles(): string | Promise<string>;\n\n    public static getTagName(): string {\n        return this.name;\n    }\n\n    static register<T extends CustomElement = CustomElement>(\n        this: CustomElementInterface<T>,\n        registry: CustomElementRegistry,\n    ): void {\n        registry.define(this.getTagName(), this);\n    }\n}\n\nexport interface CustomElementInterface<T extends CustomElement = CustomElement> {\n    new (): T;\n    getTagName(): string;\n    register(registry: CustomElementRegistry): void;\n}\n"],"names":["CustomElement","shadow","styleTag","registry"],"mappings":"AAAO,MAAeA,UAAsB,WAAY,CACpD,aAAc,CACJ,QACN,KAAK,SAAS,CAClB,CAEA,MAAc,UAA0B,CACpC,MAAMC,EAAS,KAAK,aAAa,CAAE,KAAM,OAAQ,EAC3CC,EAAW,SAAS,cAAc,OAAO,EACtCA,EAAA,YAAc,MAAM,KAAK,OAAO,EACzCD,EAAO,YAAYC,CAAQ,EAErB,MAAA,KAAK,OAAOD,CAAM,CAC5B,CAEA,mBAA0B,CAAC,CAE3B,sBAA6B,CAAC,CAM9B,OAAc,YAAqB,CAC/B,OAAO,KAAK,IAChB,CAEA,OAAO,SAEHE,EACI,CACJA,EAAS,OAAO,KAAK,WAAW,EAAG,IAAI,CAC3C,CACJ"}