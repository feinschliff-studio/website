{"version":3,"file":"MapPopup.b98580d4.js","sources":["../../src/components/MapPopup.ts"],"sourcesContent":["import { CustomElement } from './CustomElement';\nimport { GeoMap } from './GeoMap';\nimport { MapMarker, MarkerReadyEvent } from './MapMarker';\n\nexport class MapPopup extends CustomElement {\n    public popup: google.maps.InfoWindow | null = null;\n\n    protected async render(shadow: ShadowRoot): Promise<void> {\n        this.parentElement.addEventListener(\n            'map:marker-ready',\n            (event: MarkerReadyEvent) =>\n                this.ready(event.detail.map, event.detail.marker),\n        );\n    }\n\n    private ready(map: google.maps.Map, marker: google.maps.Marker): void {\n        this.popup = new google.maps.InfoWindow({\n            content: this.htmlContent,\n            maxWidth: this.maxWidth,\n            minWidth: this.minWidth,\n            pixelOffset: this.offset,\n        });\n\n        marker.addListener('click', () =>\n            this.popup?.open({\n                anchor: marker,\n                shouldFocus: false,\n                map,\n            }),\n        );\n\n        map.addListener('idle', () =>\n            this.popup?.open({\n                anchor: marker,\n                shouldFocus: false,\n                map,\n            }),\n        );\n    }\n\n    public get htmlContent(): string{\n        return `<div class=\"map-popup\">${this.content}</div>`;\n    }\n\n\n    public get content(): string {\n        return this.hasAttribute('content')\n            ? this.getAttribute('content')\n            : this.innerHTML;\n    }\n\n    public get maxWidth(): number | undefined {\n        return this.hasAttribute('max-width')\n            ? Number(this.getAttribute('max-width'))\n            : undefined;\n    }\n\n    public get minWidth(): number | undefined {\n        return this.hasAttribute('min-width')\n            ? Number(this.getAttribute('min-width'))\n            : undefined;\n    }\n\n    public get offset(): google.maps.Size | undefined {\n        const xOffset = Number(this.getAttribute('x-offset') || 0);\n        const yOffset = Number(this.getAttribute('y-offset') || 0);\n\n        return new google.maps.Size(xOffset, yOffset);\n    }\n\n    public static getTagName(): string {\n        return 'map-popup';\n    }\n\n    protected styles(): string | Promise<string> {\n        return '* {color:black}';\n    }\n}\n\nexport function setup(registry: CustomElementRegistry) {\n    MapPopup.register(registry);\n}\n"],"names":["MapPopup","CustomElement","__publicField","shadow","event","map","marker","_a","xOffset","yOffset","setup","registry"],"mappings":"wNAIO,MAAMA,UAAiBC,CAAc,CAArC,kCACIC,EAAA,aAAuC,MAE9C,MAAgB,OAAOC,EAAmC,CACtD,KAAK,cAAc,iBACf,mBACCC,GACG,KAAK,MAAMA,EAAM,OAAO,IAAKA,EAAM,OAAO,MAAM,CAAA,CAE5D,CAEQ,MAAMC,EAAsBC,EAAkC,CAClE,KAAK,MAAQ,IAAI,OAAO,KAAK,WAAW,CACpC,QAAS,KAAK,YACd,SAAU,KAAK,SACf,SAAU,KAAK,SACf,YAAa,KAAK,MAAA,CACrB,EAEMA,EAAA,YAAY,QAAS,WACxB,OAAAC,EAAA,KAAK,QAAL,YAAAA,EAAY,KAAK,CACb,OAAQD,EACR,YAAa,GACb,IAAAD,CAAA,GACH,EAGDA,EAAA,YAAY,OAAQ,WACpB,OAAAE,EAAA,KAAK,QAAL,YAAAA,EAAY,KAAK,CACb,OAAQD,EACR,YAAa,GACb,IAAAD,CAAA,GACH,CAET,CAEA,IAAW,aAAqB,CAC5B,MAAO,0BAA0B,KAAK,eAC1C,CAGA,IAAW,SAAkB,CAClB,OAAA,KAAK,aAAa,SAAS,EAC5B,KAAK,aAAa,SAAS,EAC3B,KAAK,SACf,CAEA,IAAW,UAA+B,CAC/B,OAAA,KAAK,aAAa,WAAW,EAC9B,OAAO,KAAK,aAAa,WAAW,CAAC,EACrC,MACV,CAEA,IAAW,UAA+B,CAC/B,OAAA,KAAK,aAAa,WAAW,EAC9B,OAAO,KAAK,aAAa,WAAW,CAAC,EACrC,MACV,CAEA,IAAW,QAAuC,CAC9C,MAAMG,EAAU,OAAO,KAAK,aAAa,UAAU,GAAK,CAAC,EACnDC,EAAU,OAAO,KAAK,aAAa,UAAU,GAAK,CAAC,EAEzD,OAAO,IAAI,OAAO,KAAK,KAAKD,EAASC,CAAO,CAChD,CAEA,OAAc,YAAqB,CACxB,MAAA,WACX,CAEU,QAAmC,CAClC,MAAA,iBACX,CACJ,CAEO,SAASC,EAAMC,EAAiC,CACnDX,EAAS,SAASW,CAAQ,CAC9B"}